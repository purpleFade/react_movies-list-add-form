{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","_ref$label","label","_ref$placeholder","placeholder","concat","_ref$required","required","_ref$onChange","onChange","_useState","useState","Math","random","toFixed","slice","id","_slicedToArray","_useState3","_useState4","touched","setTouched","hasError","htmlFor","type","classNames","event","target","onBlur","NewMovie","onAdd","_useState2","count","setCount","fields","setFields","handleChange","fieldKey","s","_objectSpread","_defineProperty","trim","isFormInvalid","onSubmit","preventDefault","method","disabled","moviesFromServer","App","movieList","setMovieList","prev","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b508eefe.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const handleSubmit = (event: React.FormEvent) => {\n  event.preventDefault();\n};\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ninterface INewMovie {\n  onAdd: (movie: Movie) => void;\n}\n\ninterface MovieFields extends Movie {\n  description: string;\n}\n\nexport const NewMovie = ({ onAdd }: INewMovie) => {\n  // Increase the count after successful form submission\n  // to reset touched status of all the `Field`s\n  const [count, setCount] = useState(0);\n  const [fields, setFields] = useState<MovieFields>({\n    description: '',\n    imdbId: '',\n    imdbUrl: '',\n    imgUrl: '',\n    title: '',\n  });\n\n  const handeSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    onAdd(fields);\n    setCount(count + 1);\n  };\n\n  const handleChange = (fieldKey: keyof MovieFields) => (value: string) => {\n    setFields((s) => ({ ...s, [fieldKey]: value.trim() }));\n  };\n\n  const isFormInvalid = !fields.title\n    || !fields.imgUrl\n    || !fields.imdbUrl\n    || !fields.imdbId;\n\n  return (\n    <form className=\"NewMovie\" key={count} onSubmit={handeSubmit} method=\"POST\">\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={fields.title}\n        onChange={handleChange('title')}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={fields.description}\n        onChange={handleChange('description')}\n\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={fields.imgUrl}\n        onChange={handleChange('imgUrl')}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={fields.imdbUrl}\n        onChange={handleChange('imdbUrl')}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={fields.imdbId}\n        onChange={handleChange('imdbId')}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={isFormInvalid}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport { Movie } from './types/Movie';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\nimport { NewMovie } from './components/NewMovie';\nimport './App.scss';\n\nconst movies: Movie[] = moviesFromServer.map((movie) => ({\n  ...movie,\n  id: movie.imdbId,\n}));\n\nexport const App = () => {\n  const [movieList, setMovieList] = useState<Movie[]>(movies);\n\n  const onAdd = (movie: Movie) => {\n    setMovieList((prev) => [...prev, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movieList} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={onAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}